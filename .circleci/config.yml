version: 2.1

orbs:
  ruby: circleci/ruby@1.0

jobs:
  test:
    docker:
      - image: circleci/ruby:2.5.1
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_DB: gc_v2_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
      - image: circleci/redis:4.0.9
        environment:
          - REDIS_URL: "redis://localhost:6379/"
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
        environment:
          - cluster.name: elasticsearch
          - xpack.security.enabled: false
          - transport.host: localhost
          - network.host: 127.0.0.1
          - http.port: 9200
          - discovery.type: single-node
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGUSER: postgres
      PGPASSWORD: ""
      PGHOST: 127.0.0.1
      RAILS_ENV: test
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v2-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - v2-gem-cache-{{ arch }}-{{ .Branch }}-
            - v2-gem-cache-{{ arch }}-
      - run: bundle install --path vendor/bundle && bundle clean
      - save_cache:
          paths:
            - vendor/bundle
          key: v2-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Wait for Elastic
          command: dockerize -wait tcp://localhost:9200 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rake db:schema:load db:seed section=setup

      # Run rspec in parallel
      - ruby/rspec-test
      - store_artifacts:
          path: coverage

workflows:
  version: 2
  test:
    jobs:
      - test
