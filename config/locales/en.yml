# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   'true': 'foo'
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
  hello: "Hello world"
  shared:
    hi_there: "Hi there %{name},"
    help_center: "Help center"
    this_page: "this page"
    best: "Best"
    accepted: 'Accepted'
    thank_you: 'Thank you'
    dear: "Dear %{name}"

  devise_token_auth:
    sessions:
      not_confirmed: "Your account is deactivated"
  policy_application_contr:
    show:
      policy_application_not_found: "Policy Application is not found or no longer available"
    new:
      unit_not_found: "Unit not found"
      invalid_unit: "Invalid unit"
      invalid_policy_type: "Invalid policy type"
    create:
      invalid_auth_key: "Invalid Auth Key"
    update_residential:
      invalid_address: "Please enter a valid residential address"
    rentguarantee_complete:
      inistructions_were_sent: "Instructions were sent"
    validate_policy_users_params:
      bad_arguments: "You can't use the same emails for policy applicants"
    create_security_deposit_replacement:
      policy_application_unavailable: "Application cannot be quoted at this time"
      quote_failed: "Quote could not be processed at this time"
    get_coverage_options:
      invalid_combination: "Invalid carrier_id/policy_type_id combination"
    deposit_choice_get_coverage_options:
      insurable_id_cannot_be_blank: "insurable_id cannot be blank"
      effective_date_cannot_be_blank:  "effective_date cannot be blank"
      no_security_deposit_replacement: "There are no security deposit replacement plans available for this property (error code"
    msi_get_coverage_options:
      agency_cannot_be_blank:  "agency_id cannot be blank"
      effective_date_must_be_valid_date:  "effective_date must be a valid date"
      additional_insured_cannot_be_blank:  "additional_insured cannot be blank"
      billing_strategy_id_cannot_be_blank: "billing_strategy_id cannot be blank"
      community_not_found: "community not found"
      billing_strategy_must_belong_to_carrier: "billing strategy must belong to the correct carrier, agency, and HO4 policy type"
    validate_applicants:
      must_have_only_one_primary_user: "Parameters must have only one primary user"
      already_signup_with_this_email: "A User has already signed up with this email address.  Please log in to complete your application"
    update_users:
      cant_unbound_policy_user: "Can't unbound the policy user"
      cant_update_policy_user: "Can't update the policy user"
      cant_add_policy_user: "Can't add the policy user"
      cant_update_user: "Can't update user"
      cant_create_user: "Can't create user"
      cant_update_address: "Can't update address"
    qbe_application:
      missing_fic_info: "Missing required community information: %{missing_list}"
      year_built: "year built"
      number_of_units: "number of units"
      gated: "gated community"
      years_professionally_managed: "years managed by property manager"
      in_city_limits: "community in city limits"
  policy_app_model:
    user_age: "%{name} must be at least 18 years old"
    billing_strategy_must_belong: "billing strategy must belong to the same agency"
    billing_strategy_must_be_valid: "must be a valid billing strategy for the current carrier"
    billing_strategy_must_be_enabled: "billing strategy must be enabled"
    carrier_agency_must_exist: "carrier agency must exist"
    is_not_available_for_this_carrier: "is not available for this carrier/agency combination"
    cannot_be_true_with_liability_limit: "cannot be true with a liability limit of $300,000"
    cannot_be_greater_than: "cannot be greater than 0 to recieve coverage"
    cannot_be_true: "cannot be 'true' to recieve coverage"
    expiration_date_cannot_be_before_effective: "expiration date cannot be before effective date."
    pensio:
      policy_quote_failed_to_return: "Policy Quote failed to return"
      application_unavailable: "Application unavailable to be quoted"
    crum:
      event_failed: "Event failed to save"
    qbe:
      rates_cannot_be_nil: "Argument 'rates' cannot be nil"
      rates_must_be_array: "Argument 'rates' must be an array"
      quote_id_cannot_be_nil: "Argument 'quote_id' cannot be nil"
      questions:
        question_1: "Do you operate a business in your rental apartment/home?"
        question_2: "Has any animal that you or your roommate(s) own ever bitten a person or someone elseâ€™s pet?"
        question_3: "Do you or your roommate(s) own snakes, exotic or wild animals?"
        question_4: "Is your dog(s) any of these breeds: Akita, Pit Bull (Staffordshire Bull Terrier, America Pit Bull Terrier, American Staffordshire Terrier, Bull Terrier), Chow, Rottweiler, Wolf Hybrid, Malamute or any mix of the above listed breeds?"
        question_5: "Have you had any liability claims, whether or not a payment was made, in the last 3 years?"
  agency_model:
    parent_id_incorrect: "Parent id incorrect"
    agency_cannot_be_updated: "Agency can't be updated to sub-agency"
    no_branding: "No branding for agency"
  policy_model:
     cannot_update: "Cannot update in system policy"
     account_must_be_specified: "Account must be specified"
     carrier_agency_must_exist: "carrier agency must exist"
     must_belong_to_coverage: "must belong to BOUND Policy Coverage"
     must_have_paid_invoice: "must have at least one paid invoice to change status"
     no_policy_issue_for_qbe: "No policy issue for QBE Specialty"
     error_with_policy: "Error happened with policy issue"
     cancellation_reason_invalid: "Cancellation reason is invalid"
     policy_is_already_cancelled: "Policy is already cancelled"
     cancellation_already_pending: "Policy cancellation is already pending"
     proration_failed: "Encountered an error while prorating policy; cancellation marked as pending"
     document_wrong_format: "The document wrong format, only: PDF, DOC, DOCX, XLSX, XLS, CSV, JPG, JPEG, PNG, GIF, SVG, TXT"
  billing_strategy_model:
    must_be_assigned_to_carrier: "must be assigned to carrier:"
  policy_user_model:
    must_indicate_removal: "Must indicate if removal is necessary"
    email_must_be_present: "Email must be present to verify acceptance"
    already_included_on_policy: "Already included on policy or policy application"
  insurable_type_model:
    cannot_be_blank: "cannot be blank"
  global_agency_permission_model:
    cant_be_enabled: "%{translated_key} cant be enabled due to global permissions restrictions of the parent agency"
  staff_permission_model:
    cant_be_enabled: "%{translated_key} cant be enabled due to global permissions restrictions"
  address_model:
    is_not_a_valid_state: "is not a valid state"
    must_be_valid_address: "could not be parsed; must be a valid address"
    is_invalid: "is invalid"
  carrier_insurable_type_model:
    cannot_be_null: "cannot be null"
  insurable_model:
    must_belong_to_same_account: "must belong to same account as parent"
    either_address_must_be_provided: "either 'address' or 'insurable_id' and a string 'unit' must be provided"
    building_doesnot_exist: "The requested residential building/community id does not exist"
    unit_doesnot_exist: "The requested unit does not exist"
    unable_create_unit: "Unable to create unit"
    invalid_address: "Please enter an existing address"
    invalid_address_value: "Address not yet in system, please try again later"
    unable_deduce_unit: "Unable to deduce unit title from address"
    not_standart_format: "is not a standard format (e.g. 'Apartment #2, Unit 3, #5, etc.)"
    request_residential_build_not_exist: "The requested residential building/community does not exist"
    unable_create_community_from_address: "Unable to create community from address"
    parent_community_not_exist: "Requested parent community does not exist"
    parent_community_not_the_same: "Requested parent community is not in the same state/zip/city"
    unable_to_create_from_address: "Unable to create community from address"
    unable_to_create_building_from_address: "Unable to create building from address"
    internal_error_occured: "Internal error occurred"
    should_be_uniq_inside_group: "should be uniq inside group"
  policy_quote_model:
    no_policy_for_qbe: "No policy bind for QBE Specialty"
    error_with_policy_bund: "Error happened with policy bind"
    quote_ineligible: "Quote ineligible for acceptance"
    quote_billing_failed: "Quote billing failed, unable to write policy"
    unable_to_bind_policy: "Unable to bind policy"
    rent_guarantee_has_been_accepted: "Rental Guarantee has been accepted.  Please check your email for more information."
    policy_has_been_accepted: "Policy has been accepted.  Please check your email for more information."
    error_attaching_policy: "Error attaching policy to system"
    unable_to_save_policy: "Unable to save policy in system"
    no_build_coverages_for_qbe: "No build coverages for QBE Specialty"
    no_build_coverages_for_crum: 'No build coverages for Crum'
    no_build_coverages_for_pensio: 'No build coverages for Pensio'
    error_with_build_coverages: 'Error happened with build coverages'
    invoice_gen_failed: "We encountered an error while processing your application."
  policy_type_model:
    residential: 'Residential'
    master_policy: 'Residential'
    master_policy_coverage: 'Residential Coverage'
    commercial: 'Commercial'
    rent_guarantee: 'Rent Guarantee'
    security_deposit_replacement: 'Security Deposit Replacement'
    master_security_deposit_replacement: 'Security Deposit Replacement'
    master_security_deposit_replacement_coverage: 'Security Deposit Replacement Coverage'
  policy_bind_warning_notification_job:
    get_covered_bind_warning: "Get Covered Bind Warning"
  qbe_policy_quote:
    qbe_bind_failure: "QBE Bind Failure"
    carrier_must_be_qbe: "Carrier must be QBE to bind residential quote"
    status_must_be_quoted_or_error: "Status must be quoted or error to bind quote"
  crum_policy_quote:
    quote_documents_recieved: "Quote documents recieved"
    quote_inneligable_to_download: "Quote inneligable to download documents"
  msi_policy_quote:
    carrier_must_be_qbe: "Carrier must be MSI to bind residential quote"
    invalid_payment_data: "Invalid payment data for binding policy"
    failed_to_build_bind_request: "Failed to build bind request"
    status_must_be_quoted_or_error: "Status must be quoted or error to bind quote"
    msi_bind_failure: "MSI bind failure (Event ID:"
    msi_error: "MSI Error:"
    invalid_pm_email: "Invalid property manager email provided"
  dc_policy_quote:
    security_deposit_replacement: "Security Deposit Replacement Bond"
    carrier_must_be_deposit_choice: "Carrier must be Deposit Choice to bind security deposit replacement quote"
    bond_creation_failed: "Bond Creation Failed: Deposit Choice service rejected user information"
    deposit_choise_bind_failure: "Deposit Choice bind failure (Event ID:"
  invoiceable_quote:
    error_during_invoice_generation: "encountered an error during invoice generation"
    error_during_invoice_creation: "encountered an error during invoice creation"
  policy_quote_controller:
    quote_unavailable_update: "Quote Unavailable for Update"
    unable_to_update_quote: "We are unable to update this quote due to it already being accepted or not meeting the policy type requirements."
    not_applicable: "Not applicable"
    external_payment_not_applicable: "External payment authorization is not applicable to this policy quote"
    system_error: 'System error'
    remote_system_failed: "Remote system failed to provide authorization"
    invalid_payment_method: 'Invalid payment method'
    ach_support_not_applicable: 'ACH support not applicable'
    payment_method_must_be_card: "Payment method must be 'card' or 'ach'; received"
    not_found: "not found"
    policy_quote_not_found: "Policy Quote could not be found."
    user_could_not_be_found: "User  could not be found."
    invalid_payment_info: "Invalid Payment Information"
    could_not_be_accepted: "Could Not Be Accepted"
    accepted: "Accepted"
    failure: 'Failure'
    payment_token_cannot_be_blank: "payment token cannot be blank"
    valid_payment_method_must_supplied: "a valid payment method must be supplied"
    credit_card_info_cannot_be_blank: "Credit Card Info cannot be blank"
    address_line_1: "Address Line 1"
    city: "City"
    state: "State"
    postal_code: "Postal Code"
    state_must_be_valid_us: "State must be a valid US state abbreviation"
    postal_code_must_be_valid: "Postal code must be a valid zip code"
  insurable_geographical_category:
    cannot_be_blank_if_data_are_specified: "cannot be blank if counties, zip codes, or cities are specified"
  user_controller:
    invalid_token: "Invalid token."
  user_policy_application_controller:
    policy_type_not_recognized: "Policy Type not Recognized"
    policy_type_is_not_residential_or_commercial: "Policy Type is not residential or commercial.  Please select a supported Policy Type"
    quote_failed: "Quote Failed"
    must_be_within_the_next_90_days: "must be within the next 90 days"
    application_unavailable: "Application Unavailable"
    policy_or_guarantee_not_recognized: 'Policy or Guarantee Type Not Recognized'
    only_residential_available_to_update: 'Only Residential Policies and Rental Guaranatees are available for update from this screen'
    please_login_to_update_policy: 'Please log in to update a commercial policy application'
    you_cant_use_same_emails: "You can't use the same emails for policy applicants"
  user_users_controler:
    unauthorized_access: "Unauthorized Access"
    invalid_login_credentials: "Invalid login credentials"
  user_policies_controller:
    need_insurable: 'Need Insurable'
    policy_created: 'Policy created'
    policy_is_declined: 'Policy is declined'
    policy_was_already_declined: "Policy was already declined"
    policy_was_already_accepted: "Policy was already accepted"
    policy_is_accepted: 'Policy is accepted. An email sent with attached Policy'
    documents_were_sent: 'Documents were sent'
    refund_was_sent: 'Refund was successfully sent'
    refund_was_successfully_sent: 'Refund was not successfully sent'
    cancel_was_successfully_sent: 'Cancel was successfully sent'
    refund_was_not_successfully_sent: 'Refund was not successfully sent'
    you_cannot_add_coverage_with_master: 'You cannot add coverage with master policy type'
    unable_to_attach_payment: "Unable to attach payment source to user"
  signable_documents_controller:
    signing_failed: 'An error occurred while trying to apply your signature; please try again later'
    document_not_found: 'Document not found'
  msi_service:
    invalid_address: "Please enter a valid address"
    invalid_effective_date: "The effective date is invalid"
    additional_interest:
      invalid_entity_type: "Please choose whether the property manager is an individual or a company"
      company_name_required: "Property manager company name cannot be blank"
      company_name_too_long: "Property manager company name cannot be more than 100 characters"
      invalid_email: "Property manager email is invalid"
      invalid_phone_number: "Property manager phone number is invalid"
      first_name_required: "Property manager first name cannot be blank"
      first_name_too_long: "Property manager first name cannot be more than 50 characters"
      last_name_required: "Property manager last name cannot be blank"
      last_name_too_long: "Property manager last name cannot be more than 50 characters"
      middle_name_too_long: "Property manager middle name cannot be more than 50 characters"
  qbe_service:
    additional_interest:
      address_line_1_required: "Property manager address line 1 is required"
      address_city_required: "Property manager address city is required"
      address_state_required: "Property manager address state is required"
      address_zip_required: "Property manager address zip is required"
      address_state_invalid: "Property manager address state is invalid"
      address_zip_required: "Property manager address zip is invalid"
  coverage_options:
    estimated_premium_errors: 'Contents selection is required'
    cannot_be_blank_counties: "cannot be blank if counties are specified"
    bound: 'BOUND'
    bound_with_warning: 'BOUND_WITH_WARNING'
    renewing: 'RENEWING'
    renewed: 'RENEWED'
    reinstated: 'REINSTATED'
    1_title: "All Other Peril"
    1_desc: "The insurer will deduct from a loss because of different risk that is unlisted (i.e., theft, typhoon, or wind) before paying up to its coverage limits."
    2_title: "Theft"
    2_desc: "The amount the insurer will deduct from a loss resulting from theft before paying up to its policy limits."
    3_title: "Hurricane"
    3_desc: "The amount the insurer will deduct from a loss resulting from a hurricane before paying up to its policy limits."
    5_title: "Wind / Hail"
    5_desc: "The amount the insurer will deduct from a loss resulting from wind or hail before paying up to its policy limits."
    6_title: "Earthquake"
    6_desc: "The amount the insurer will deduct from a loss resulting from an earthquake before paying up to its policy limits."
    1003_title: "Contents"
    1003_desc: "Individual property coverage that ensures your own things and property"
    1004_title: "Loss Of Use"
    1004_desc: "Coverage repays you for the expense of keeping a practically identical way of life following a covered misfortune that surpasses your typical costs."
    1005_title: "Liability"
    1005_desc: "Liability coverage protects you in an event of negligent damage to your apartment, the community, or other residents."
    1006_title: "Med Payment"
    1006_desc: "Coverage designed to pay for medical costs to others who are by chance injured on an insured property up to the policy's limits."
    1007_title: "Pet Damage"
    1007_desc: "This option covers up to $500 for accidental damage caused by a pet such as stained carpet or chewed baseboards."
    1008_title: "Water Backup"
    1008_desc: "This option covers your personal property in the event there's water/sewer damage in your covered dwelling that begins off premises."
    1009_title: "Tenants Plus Package"
    1010_title: "Replacement Cost"
    1010_desc: "This option replace the damaged property with materials of like kind and quality, without any deduction for depreciation"
    1011_title: "Scheduled Personal Property"
    1012_title: "Spp Jewelry"
    1013_title: "Spp Furs"
    1014_title: "Spp Silverware"
    1015_title: "Spp Fine Arts"
    1016_title: "Spp Cameras"
    1017_title: "Spp Musical Equipment"
    1018_title: "Spp Golf Equipment"
    1019_title: "Spp Stamp Collections"
    1020_title: "Spp Men's Jewelry"
    1021_title: "Spp Women's Jewelry"
    1043_title: "Increased Property Limits   Jewelry, Watches"
    1043_desc:  "The base policy includes a theft sublimit of $1,000 for jewelry, watches, and furs. This enhanced coverage provides the option of increasing that sublimit without scheduling the items."
    1060_title: "Animal Liability Buy Back"
    1060_desc:  "This option provides an increased amount of liability protection when an insured is held liable for damages by a pet."
    1061_title: "Earthquake"
    1061_desc:  "This option covers your personal property (up to $5,000) in the event of an earthquake."
    1062_title: "Workers Compensation"
    1062_desc:  "Provides coverage for 1 full time outservant employee for a premium of $60.00."
    1063_title: "Home Day Care"
    1065_title: "Identity Fraud"
    1065_desc:  "This option provides coverage up to $5,000 for expenses incurred by an insured as a direct result of identity fraud."
    1066_title: "Fire Department Service"
    1067_title: "Sink Hole"
    1068_title: "Wind Hail Exclusion"
    1070_title: "Ordinance Or Law"
    1071_title: "Loss Assessment"
    1072_title: "Refrigerated Property"
    1072_desc:  "This option provides up to $500 coverage for loss of property caused by power service interruption or mechanical failure in a freezer or fridge."
    1073_title: "Rental Income"
    1075_title: "Bed Bug"
    1075_desc:  "This option provides coverage to treat, remediate and eliminate a bed bug infestation in the residence."
    1076_title: "Forced Entry Theft"
    1076_desc:  "This option provides a discount by changing theft coverage to require physical evidence of forced entry and may require a police report."
    1077_title: "Tenants Additional Protection"
    1077_desc:  "Increases Loss of Use to 40% and increases Rental Income Coverage to $10,000, from $3,000."
    1081_title: "Self Storage Buy Back"
    1081_desc:  "This option allows the insured to buy back additional limits for personal property that is stored."
    1082_title: "Limited Rental To Others"
    1082_desc:  "The policy may be endorsed to insure against loss by theft when all or part of the residence."
    1083_title: "Home System Breakdown"
    all_peril_title: "All Other Peril"
    all_peril_desc: "The insurer will deduct from a loss because of different risk that is unlisted (i.e., theft, typhoon, or wind) before paying up to its coverage limits."
    hurricane_title: "Hurricane Deductible"
    hurricane_desc: "The amount the insurer will deduct from a loss resulting from a hurricane before paying up to its policy limits."
    coverage_c_title: "Contents"
    coverage_c_desc: "Individual property coverage that ensures your own things and property"
    liability_title: "Liability"
    liability_desc: "Liability coverage protects you in an event of negligent damage to your apartment, the community, or other residents."
    medical_title: "Med Payment"
    medical_desc: "Coverage designed to pay for medical costs to others who are by chance injured on an insured property up to the policy's limits."
    pet_damage_title: "Pet Damage"
    pet_damage_desc: "This option covers up to $500 for accidental damage caused by a pet such as stained carpet or chewed baseboards."
    water_backup_title: "Water Backup"
    water_backup_desc: "This option covers your personal property in the event there's water/sewer damage in your covered dwelling that begins off premises."
    equip_title: "Equipment Protection"
    equip_desc: "Coverage includes direct physical damage to covered electronics (ie. tv, cell phone, laptop, ipad, etc.) including 'electronic circuitry impairment'."
    earthquake_coverage_title: "Earthquake"
    earthquake_coverage_desc: "This option covers your personal property (up to $5,000) in the event of an earthquake."
    bedbug_title: "Bed Bug"
    bedbug_desc: "This option provides coverage to treat, remediate and eliminate a bed bug infestation in the residence."
    # not used, possibly wrong uids (cov d is LOU and windx is absent in sendpolicyinfo)"
    coverage_d_title: "Loss of Use"
    coverage_d_desc: "Coverage repays you for the expense of keeping a practically identical way of life following a covered misfortune that surpasses your typical costs."
    windstorm_title: "Windstorm Exclusion"
    windstorm_desc: ""
  insurable_rate_configuration:
    qbe:
      account_property_without_cip: "Carrier failed to resolve building information"
      cip_save_failure: "An error occurred while processing the address"
      county_failure: "Carrier failed to resolve address"
      property_info_failure: "Carrier failed to retrieve property information"
      rates_failure: "Carrier failed to retrieve coverage rates"
  insurables_controller:
    qbe:
      no_cip: "Carrier failed to resolve building information"
      county_already_resolved: "The county for this address is already resolved"
      cip_save_error: "Carrier error occurred"
      invalid_county_selection_error: "Invalid county selection"
      no_counties_available: "The carrier is unable to provide a county list for this address"

# I18n.t('agency_model.no_branding')
# I18n.t('policy_application_contr.new.unit_not_found')
